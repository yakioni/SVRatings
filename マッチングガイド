# マッチング問題のトラブルシューティングガイド

## 改善されたログの確認方法

### 1. ボット起動時のログ
ボット起動時に以下のログが順次表示されることを確認してください：

```
🤖 Bot1 logged in as BotName
✅ Database initialization completed
🔗 Match creation callback set: create_battle_thread
🔗 Match creation callback configured
🚀 Starting background tasks...
🚀 Background match check task started
✅ Match creation callback is set
🚀 Request processing task started
🔄 Background match check task started and running
🏗️ Setting up channels...
🎉 Bot1 initialization completed successfully!
```

### 2. ユーザー待機時のログ
ユーザーがマッチングボタンを押した時：

```
★ User [ユーザー名] ([表示名]) added to waiting list with rating [レート]. Queue size: [キューサイズ]
```

### 3. バックグラウンドチェックのログ
5回に1回（約2.5秒間隔）で以下のログが表示されます：

```
🔍 Background check #[回数]: [人数] users in queue
  Queue contents: [ユーザー名1(レート1)], [ユーザー名2(レート2)]
```

### 4. マッチング成功時のログ
マッチが成立した場合：

```
📊 Rating check: [ユーザー1](レート1) vs [ユーザー2](レート2) = diff [差]
✅ Match created: [ユーザー1] vs [ユーザー2] (rating diff: [差])
🎯 Total matches found: 1
🎯 Found 1 matches!
  ⚔️ Creating match: [ユーザー1] vs [ユーザー2]
📝 Removed 2 users from queue. Queue size: 2 -> 0
🎯 Starting battle thread creation for: [ユーザー1] vs [ユーザー2]
```

## トラブルシューティング手順

### STEP 1: システム状態の確認
管理者権限で以下のコマンドを実行：
```
/debug_queue
```

確認項目：
- ✅ Match Callback: SET
- ✅ Background Task: RUNNING  
- ✅ Processing Task: RUNNING
- Queue Size: [人数]

### STEP 2: ログの確認

#### 2-1. バックグラウンドタスクが動作していない場合
以下のログが出力されていない：
```
🔄 Background match check task started and running
```

**解決策：**
- ボットを再起動
- `start_background_tasks()`が`on_ready`で呼ばれているか確認

#### 2-2. コールバックが設定されていない場合
以下のログが出力されている：
```
⚠️ Match creation callback is NOT set - matches will not be processed!
```

**解決策：**
- `matchmaking_vm.set_match_creation_callback(create_battle_thread)`の呼び出し順序を確認
- ボットを再起動

#### 2-3. ユーザーが待機リストに追加されない場合
以下のいずれかのログが出力される：
```
⚠️ User [名前] not found in database
⚠️ User [名前] tried to join queue but season is not active
⚠️ User [名前] classes not set: class1=[クラス1], class2=[クラス2]
```

**解決策：**
- ユーザー登録を完了させる
- クラス選択を完了させる
- シーズンがアクティブか確認

### STEP 3: マッチング条件の確認

#### 3-1. レーティング差が大きすぎる場合
以下のログが出力される：
```
❌ Rating diff too large: [差] > [制限値]
```

**解決策：**
- `settings.py`の`MAX_RATING_DIFF_FOR_MATCH`値を確認（現在：300）
- 必要に応じて値を大きくする（例：500）

#### 3-2. 連続マッチ防止が働いている場合
以下のログが出力される：
```
⏭️ Skipping consecutive match: [ユーザー1] vs [ユーザー2]
```

**解決策：**
- 他のユーザーとマッチングするまで待機
- または一時的に連続マッチ防止機能を無効化

## 設定調整のヒント

### マッチング条件を緩くする
```python
# settings.py
MAX_RATING_DIFF_FOR_MATCH = 500  # 300から500に拡大
```

### マッチングチェック頻度を上げる
```python
# matchmaking_vm.py の background_match_check
await asyncio.sleep(0.2)  # 0.5秒から0.2秒に短縮
```

### 連続マッチ防止を一時的に無効化
```python
# find_and_create_matches内でコメントアウト
# if self.previous_opponents.get(user1.id) == user2.id:
#     self.logger.debug(f"⏭️ Skipping consecutive match: {user1.display_name} vs {user2.display_name}")
#     continue
```

## よくある問題と解決策

### Q: 待機リストに追加されるが、マッチしない
**A:** `/debug_queue`でシステム状態を確認し、Background Taskが動作していることを確認してください。

### Q: 2人いるのにマッチしない
**A:** レーティング差を確認してください。300以上の差がある場合はマッチしません。

### Q: エラーログが大量に出る
**A:** データベース接続やDiscord API制限の問題の可能性があります。ボットを再起動してください。

### Q: スレッドは作成されるがボタンが反応しない
**A:** `active_result_views`の管理に問題がある可能性があります。ResultViewの初期化を確認してください。

## 緊急時の対応

### 完全リセット
```python
# コンソールで実行（管理者のみ）
matchmaking_vm.waiting_queue.clear()
matchmaking_vm.user_interactions.clear()
matchmaking_vm.previous_opponents.clear()
```

### バックグラウンドタスクの手動再起動
```python
matchmaking_vm.stop_background_tasks()
await asyncio.sleep(1)
matchmaking_vm.start_background_tasks()
```

これらの手順に従って問題を特定し、解決してください。さらに詳しい調査が必要な場合は、ログの全体を確認して具体的なエラーメッセージを探してください。